"""empty message

<<<<<<<< HEAD:migrations/versions/fa93b3cb3943_.py
Revision ID: fa93b3cb3943
Revises: 
Create Date: 2022-11-28 18:51:15.533677
========
Revision ID: a729ed5eea6f
Revises: 
Create Date: 2022-11-30 23:34:22.685588
>>>>>>>> ce1fc8b25b0292ca6bdbb8661d0b664612b3d4ea:migrations/versions/a729ed5eea6f_.py

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
<<<<<<<< HEAD:migrations/versions/fa93b3cb3943_.py
revision = 'fa93b3cb3943'
========
revision = 'a729ed5eea6f'
>>>>>>>> ce1fc8b25b0292ca6bdbb8661d0b664612b3d4ea:migrations/versions/a729ed5eea6f_.py
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('patients',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('lastname', sa.String(length=100), nullable=False),
    sa.Column('rut', sa.Integer(), nullable=False),
    sa.Column('age', sa.Integer(), nullable=True),
    sa.Column('gender', sa.String(length=50), nullable=True),
    sa.Column('birth_date', sa.String(length=50), nullable=False),
    sa.Column('email', sa.String(length=150), nullable=False),
    sa.Column('password', sa.String(length=50), nullable=False),
    sa.Column('address', sa.String(length=200), nullable=False),
    sa.Column('phone_number', sa.Integer(), nullable=False),
    sa.Column('alive', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('rut')
    )
    op.create_table('professionals',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('lastname', sa.String(length=100), nullable=False),
    sa.Column('rut', sa.String(length=100), nullable=False),
    sa.Column('role', sa.String(length=100), nullable=False),
    sa.Column('email', sa.String(length=150), nullable=False),
    sa.Column('password', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('rut')
    )
    op.create_table('caregivers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('lastname', sa.String(length=100), nullable=False),
    sa.Column('rut', sa.String(length=100), nullable=False),
    sa.Column('address', sa.String(length=200), nullable=True),
    sa.Column('patient_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['patient_id'], ['patients.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('rut')
    )
    op.create_table('clinical_records',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('program', sa.String(length=100), nullable=True),
    sa.Column('registration_date', sa.Date(), nullable=True),
    sa.Column('barthel_index', sa.String(length=100), nullable=False),
    sa.Column('zarit_scale_caregiver', sa.String(length=100), nullable=True),
    sa.Column('patient_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['patient_id'], ['patients.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('alergies',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=True),
    sa.Column('clinical_record_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['clinical_record_id'], ['clinical_records.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('controls',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('reason', sa.String(length=100), nullable=False),
    sa.Column('description', sa.String(length=1000), nullable=False),
    sa.Column('indications', sa.String(length=1000), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('professional_id', sa.Integer(), nullable=False),
    sa.Column('clinical_record_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['clinical_record_id'], ['clinical_records.id'], ),
    sa.ForeignKeyConstraint(['professional_id'], ['professionals.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('drugs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('posology', sa.String(length=100), nullable=False),
    sa.Column('clinical_record_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['clinical_record_id'], ['clinical_records.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('habits',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('smoke', sa.Boolean(), nullable=True),
    sa.Column('alcohol', sa.Boolean(), nullable=True),
    sa.Column('other_drugs', sa.String(length=100), nullable=True),
    sa.Column('clinical_record_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['clinical_record_id'], ['clinical_records.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('pathologies',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=True),
    sa.Column('clinical_record_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['clinical_record_id'], ['clinical_records.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('surgeries',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=True),
    sa.Column('clinical_record_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['clinical_record_id'], ['clinical_records.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('surgeries')
    op.drop_table('pathologies')
    op.drop_table('habits')
    op.drop_table('drugs')
    op.drop_table('controls')
    op.drop_table('alergies')
    op.drop_table('clinical_records')
    op.drop_table('caregivers')
    op.drop_table('professionals')
    op.drop_table('patients')
    # ### end Alembic commands ###
